// Code generated by protoc-gen-go. DO NOT EDIT.
// source: meta_server.proto

package meta

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateBucketReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBucketReq) Reset()         { *m = CreateBucketReq{} }
func (m *CreateBucketReq) String() string { return proto.CompactTextString(m) }
func (*CreateBucketReq) ProtoMessage()    {}
func (*CreateBucketReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad77b126ac34d57, []int{0}
}

func (m *CreateBucketReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBucketReq.Unmarshal(m, b)
}
func (m *CreateBucketReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBucketReq.Marshal(b, m, deterministic)
}
func (m *CreateBucketReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBucketReq.Merge(m, src)
}
func (m *CreateBucketReq) XXX_Size() int {
	return xxx_messageInfo_CreateBucketReq.Size(m)
}
func (m *CreateBucketReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBucketReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBucketReq proto.InternalMessageInfo

func (m *CreateBucketReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateBucketReply struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBucketReply) Reset()         { *m = CreateBucketReply{} }
func (m *CreateBucketReply) String() string { return proto.CompactTextString(m) }
func (*CreateBucketReply) ProtoMessage()    {}
func (*CreateBucketReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad77b126ac34d57, []int{1}
}

func (m *CreateBucketReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBucketReply.Unmarshal(m, b)
}
func (m *CreateBucketReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBucketReply.Marshal(b, m, deterministic)
}
func (m *CreateBucketReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBucketReply.Merge(m, src)
}
func (m *CreateBucketReply) XXX_Size() int {
	return xxx_messageInfo_CreateBucketReply.Size(m)
}
func (m *CreateBucketReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBucketReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBucketReply proto.InternalMessageInfo

func (m *CreateBucketReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetByIdRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Bucket               string   `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIdRequest) Reset()         { *m = GetByIdRequest{} }
func (m *GetByIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetByIdRequest) ProtoMessage()    {}
func (*GetByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad77b126ac34d57, []int{2}
}

func (m *GetByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIdRequest.Unmarshal(m, b)
}
func (m *GetByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIdRequest.Marshal(b, m, deterministic)
}
func (m *GetByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIdRequest.Merge(m, src)
}
func (m *GetByIdRequest) XXX_Size() int {
	return xxx_messageInfo_GetByIdRequest.Size(m)
}
func (m *GetByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIdRequest proto.InternalMessageInfo

func (m *GetByIdRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetByIdRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

type GetByIdReply struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FileName             string   `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
	ServerAppKey         string   `protobuf:"bytes,3,opt,name=serverAppKey,proto3" json:"serverAppKey,omitempty"`
	Version              int32    `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIdReply) Reset()         { *m = GetByIdReply{} }
func (m *GetByIdReply) String() string { return proto.CompactTextString(m) }
func (*GetByIdReply) ProtoMessage()    {}
func (*GetByIdReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad77b126ac34d57, []int{3}
}

func (m *GetByIdReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIdReply.Unmarshal(m, b)
}
func (m *GetByIdReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIdReply.Marshal(b, m, deterministic)
}
func (m *GetByIdReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIdReply.Merge(m, src)
}
func (m *GetByIdReply) XXX_Size() int {
	return xxx_messageInfo_GetByIdReply.Size(m)
}
func (m *GetByIdReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIdReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIdReply proto.InternalMessageInfo

func (m *GetByIdReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetByIdReply) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *GetByIdReply) GetServerAppKey() string {
	if m != nil {
		return m.ServerAppKey
	}
	return ""
}

func (m *GetByIdReply) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type PutMetaRequest struct {
	FileName             string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	ServerAppKey         string   `protobuf:"bytes,2,opt,name=serverAppKey,proto3" json:"serverAppKey,omitempty"`
	Bucket               string   `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutMetaRequest) Reset()         { *m = PutMetaRequest{} }
func (m *PutMetaRequest) String() string { return proto.CompactTextString(m) }
func (*PutMetaRequest) ProtoMessage()    {}
func (*PutMetaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad77b126ac34d57, []int{4}
}

func (m *PutMetaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutMetaRequest.Unmarshal(m, b)
}
func (m *PutMetaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutMetaRequest.Marshal(b, m, deterministic)
}
func (m *PutMetaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutMetaRequest.Merge(m, src)
}
func (m *PutMetaRequest) XXX_Size() int {
	return xxx_messageInfo_PutMetaRequest.Size(m)
}
func (m *PutMetaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutMetaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutMetaRequest proto.InternalMessageInfo

func (m *PutMetaRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *PutMetaRequest) GetServerAppKey() string {
	if m != nil {
		return m.ServerAppKey
	}
	return ""
}

func (m *PutMetaRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

type PutMetaReply struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutMetaReply) Reset()         { *m = PutMetaReply{} }
func (m *PutMetaReply) String() string { return proto.CompactTextString(m) }
func (*PutMetaReply) ProtoMessage()    {}
func (*PutMetaReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad77b126ac34d57, []int{5}
}

func (m *PutMetaReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutMetaReply.Unmarshal(m, b)
}
func (m *PutMetaReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutMetaReply.Marshal(b, m, deterministic)
}
func (m *PutMetaReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutMetaReply.Merge(m, src)
}
func (m *PutMetaReply) XXX_Size() int {
	return xxx_messageInfo_PutMetaReply.Size(m)
}
func (m *PutMetaReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PutMetaReply.DiscardUnknown(m)
}

var xxx_messageInfo_PutMetaReply proto.InternalMessageInfo

func (m *PutMetaReply) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateBucketReq)(nil), "meta.CreateBucketReq")
	proto.RegisterType((*CreateBucketReply)(nil), "meta.CreateBucketReply")
	proto.RegisterType((*GetByIdRequest)(nil), "meta.GetByIdRequest")
	proto.RegisterType((*GetByIdReply)(nil), "meta.GetByIdReply")
	proto.RegisterType((*PutMetaRequest)(nil), "meta.PutMetaRequest")
	proto.RegisterType((*PutMetaReply)(nil), "meta.PutMetaReply")
}

func init() { proto.RegisterFile("meta_server.proto", fileDescriptor_8ad77b126ac34d57) }

var fileDescriptor_8ad77b126ac34d57 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4d, 0x4f, 0x83, 0x40,
	0x10, 0x2d, 0x14, 0x5b, 0x1d, 0x09, 0xa6, 0x13, 0x3f, 0x08, 0x07, 0xd3, 0x6c, 0x62, 0xec, 0x89,
	0x83, 0xc6, 0x44, 0x6f, 0x5a, 0x0f, 0x8d, 0x31, 0x1a, 0xc3, 0x1f, 0x30, 0x54, 0xc6, 0x48, 0xa4,
	0x85, 0xc2, 0xd2, 0xc8, 0x5f, 0xf3, 0xd7, 0x99, 0x5d, 0x3e, 0x64, 0x09, 0x49, 0x6f, 0xcc, 0xdb,
	0xf7, 0xe6, 0xcd, 0x9b, 0x01, 0x26, 0x2b, 0xe2, 0xfe, 0x7b, 0x46, 0xe9, 0x96, 0x52, 0x37, 0x49,
	0x63, 0x1e, 0xa3, 0x21, 0x20, 0x76, 0x01, 0x47, 0x8f, 0x29, 0xf9, 0x9c, 0xe6, 0xf9, 0xc7, 0x37,
	0x71, 0x8f, 0x36, 0x88, 0x60, 0xac, 0xfd, 0x15, 0xd9, 0xda, 0x54, 0x9b, 0x1d, 0x78, 0xf2, 0x9b,
	0x5d, 0xc2, 0x44, 0xa5, 0x25, 0x51, 0xd1, 0x4b, 0xbc, 0x05, 0x6b, 0x41, 0x7c, 0x5e, 0x3c, 0x05,
	0x1e, 0x6d, 0x72, 0xca, 0x38, 0x5a, 0xa0, 0x87, 0x41, 0xc5, 0xd1, 0xc3, 0x00, 0x4f, 0x61, 0xb4,
	0x94, 0x4d, 0x6c, 0x5d, 0x62, 0x55, 0xc5, 0x7e, 0xc0, 0x6c, 0x94, 0xa2, 0x7b, 0x57, 0xe7, 0xc0,
	0xfe, 0x67, 0x18, 0xd1, 0xab, 0x70, 0x2c, 0x95, 0x4d, 0x8d, 0x0c, 0xcc, 0x32, 0xdb, 0x43, 0x92,
	0x3c, 0x53, 0x61, 0x0f, 0xe5, 0xbb, 0x82, 0xa1, 0x0d, 0xe3, 0x2d, 0xa5, 0x59, 0x18, 0xaf, 0x6d,
	0x63, 0xaa, 0xcd, 0xf6, 0xbc, 0xba, 0x64, 0x5f, 0x60, 0xbd, 0xe5, 0xfc, 0x85, 0xb8, 0x5f, 0xcf,
	0xdc, 0xf6, 0xd2, 0x76, 0x78, 0xe9, 0x3d, 0x5e, 0xff, 0x19, 0x87, 0x4a, 0xc6, 0x73, 0x30, 0x1b,
	0xa7, 0x9e, 0x8c, 0x57, 0xbf, 0x1a, 0x18, 0xe2, 0x15, 0xef, 0xc1, 0x6c, 0xef, 0x1b, 0x4f, 0x5c,
	0x71, 0x2d, 0xb7, 0x73, 0x2a, 0xe7, 0xac, 0x0f, 0x4e, 0xa2, 0x82, 0x0d, 0xf0, 0x0e, 0x0e, 0x17,
	0x24, 0xad, 0xc4, 0x4a, 0xf1, 0xb8, 0x64, 0xaa, 0xb7, 0x71, 0xb0, 0x83, 0x96, 0xd2, 0x1b, 0x18,
	0x57, 0x53, 0xd6, 0x32, 0x75, 0x3d, 0xb5, 0xac, 0x1d, 0x85, 0x0d, 0x96, 0x23, 0xf9, 0x5f, 0x5d,
	0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x21, 0xe0, 0xe2, 0x6c, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetaClient is the client API for Meta service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetaClient interface {
	CreateBucket(ctx context.Context, in *CreateBucketReq, opts ...grpc.CallOption) (*CreateBucketReply, error)
	GetMetaById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*GetByIdReply, error)
	PutMeta(ctx context.Context, in *PutMetaRequest, opts ...grpc.CallOption) (*PutMetaReply, error)
}

type metaClient struct {
	cc *grpc.ClientConn
}

func NewMetaClient(cc *grpc.ClientConn) MetaClient {
	return &metaClient{cc}
}

func (c *metaClient) CreateBucket(ctx context.Context, in *CreateBucketReq, opts ...grpc.CallOption) (*CreateBucketReply, error) {
	out := new(CreateBucketReply)
	err := c.cc.Invoke(ctx, "/meta.Meta/CreateBucket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaClient) GetMetaById(ctx context.Context, in *GetByIdRequest, opts ...grpc.CallOption) (*GetByIdReply, error) {
	out := new(GetByIdReply)
	err := c.cc.Invoke(ctx, "/meta.Meta/GetMetaById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *metaClient) PutMeta(ctx context.Context, in *PutMetaRequest, opts ...grpc.CallOption) (*PutMetaReply, error) {
	out := new(PutMetaReply)
	err := c.cc.Invoke(ctx, "/meta.Meta/PutMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetaServer is the server API for Meta service.
type MetaServer interface {
	CreateBucket(context.Context, *CreateBucketReq) (*CreateBucketReply, error)
	GetMetaById(context.Context, *GetByIdRequest) (*GetByIdReply, error)
	PutMeta(context.Context, *PutMetaRequest) (*PutMetaReply, error)
}

// UnimplementedMetaServer can be embedded to have forward compatible implementations.
type UnimplementedMetaServer struct {
}

func (*UnimplementedMetaServer) CreateBucket(ctx context.Context, req *CreateBucketReq) (*CreateBucketReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBucket not implemented")
}
func (*UnimplementedMetaServer) GetMetaById(ctx context.Context, req *GetByIdRequest) (*GetByIdReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMetaById not implemented")
}
func (*UnimplementedMetaServer) PutMeta(ctx context.Context, req *PutMetaRequest) (*PutMetaReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutMeta not implemented")
}

func RegisterMetaServer(s *grpc.Server, srv MetaServer) {
	s.RegisterService(&_Meta_serviceDesc, srv)
}

func _Meta_CreateBucket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBucketReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServer).CreateBucket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meta.Meta/CreateBucket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServer).CreateBucket(ctx, req.(*CreateBucketReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Meta_GetMetaById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServer).GetMetaById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meta.Meta/GetMetaById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServer).GetMetaById(ctx, req.(*GetByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Meta_PutMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutMetaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServer).PutMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/meta.Meta/PutMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServer).PutMeta(ctx, req.(*PutMetaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Meta_serviceDesc = grpc.ServiceDesc{
	ServiceName: "meta.Meta",
	HandlerType: (*MetaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBucket",
			Handler:    _Meta_CreateBucket_Handler,
		},
		{
			MethodName: "GetMetaById",
			Handler:    _Meta_GetMetaById_Handler,
		},
		{
			MethodName: "PutMeta",
			Handler:    _Meta_PutMeta_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "meta_server.proto",
}
